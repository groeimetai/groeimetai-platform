version: '3.8'

services:
  # Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:3000}
    container_name: groeimetai-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT:-us-east-1}
      - PINECONE_INDEX=${PINECONE_INDEX:-groeimetai-courses}
      - REDIS_URL=redis://redis:6379
      - CHAT_CACHE_ENABLED=${CHAT_CACHE_ENABLED:-true}
      - CHAT_CACHE_EXPIRY=${CHAT_CACHE_EXPIRY:-3600}
    depends_on:
      - redis
    networks:
      - groeimetai-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis for indexing queue and caching
  redis:
    image: redis:7-alpine
    container_name: groeimetai-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - groeimetai-network
    command: redis-server --appendonly yes --maxmemory 512mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: groeimetai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - app
    networks:
      - groeimetai-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Background indexing service
  indexing-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: groeimetai-indexing
    restart: unless-stopped
    command: node scripts/indexing-service.js
    environment:
      - NODE_ENV=production
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - REDIS_URL=redis://redis:6379
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - PINECONE_ENVIRONMENT=${PINECONE_ENVIRONMENT:-us-east-1}
      - PINECONE_INDEX=${PINECONE_INDEX:-groeimetai-courses}
    depends_on:
      - redis
    networks:
      - groeimetai-network
    volumes:
      - ./src/lib/data/course-content:/app/src/lib/data/course-content:ro

networks:
  groeimetai-network:
    driver: bridge

volumes:
  redis-data:
  nginx-cache: