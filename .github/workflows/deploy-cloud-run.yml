name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ vars.GCP_PROJECT_ID || 'groeimetai' }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME || 'groeimetai-platform' }}
  REGION: ${{ vars.REGION || 'europe-west1' }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker for GCR
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
          --build-arg NEXT_PUBLIC_FIREBASE_API_KEY="${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }}" \
          --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}" \
          --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}" \
          --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET="${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }}" \
          --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }}" \
          --build-arg NEXT_PUBLIC_FIREBASE_APP_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }}" \
          --build-arg NEXT_PUBLIC_BLOCKCHAIN_ENABLED="${{ secrets.NEXT_PUBLIC_BLOCKCHAIN_ENABLED }}" \
          --build-arg NEXT_PUBLIC_DEFAULT_NETWORK="${{ secrets.NEXT_PUBLIC_DEFAULT_NETWORK }}" \
          --build-arg NEXT_PUBLIC_CERTIFICATE_CONTRACT_POLYGON="${{ secrets.NEXT_PUBLIC_CERTIFICATE_CONTRACT_POLYGON }}" \
          --build-arg NEXT_PUBLIC_PINATA_GATEWAY="${{ secrets.NEXT_PUBLIC_PINATA_GATEWAY }}" \
          .

    - name: Push Docker image
      run: |
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }}

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:${{ github.sha }} \
          --region $REGION \
          --platform managed \
          --allow-unauthenticated \
          --set-env-vars "FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }}" \
          --set-env-vars "FIREBASE_CLIENT_EMAIL=${{ secrets.FIREBASE_CLIENT_EMAIL }}" \
          --set-env-vars "FIREBASE_PRIVATE_KEY=${{ secrets.FIREBASE_PRIVATE_KEY }}" \
          --set-env-vars "MOLLIE_API_KEY=${{ secrets.MOLLIE_API_KEY }}" \
          --set-env-vars "OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}" \
          --set-env-vars "PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}" \
          --set-env-vars "PINECONE_ENVIRONMENT=${{ secrets.PINECONE_ENVIRONMENT }}" \
          --set-env-vars "BLOCKCHAIN_PRIVATE_KEY=${{ secrets.BLOCKCHAIN_PRIVATE_KEY }}" \
          --set-env-vars "PINATA_API_KEY=${{ secrets.PINATA_API_KEY }}" \
          --set-env-vars "PINATA_SECRET_KEY=${{ secrets.PINATA_SECRET_KEY }}" \
          --set-env-vars "RESEND_API_KEY=${{ secrets.RESEND_API_KEY }}" \
          --set-env-vars "REDIS_URL=${{ secrets.REDIS_URL }}" \
          --set-env-vars "N8N_API_KEY=${{ secrets.N8N_API_KEY }}" \
          --set-env-vars "N8N_WEBHOOK_URL=${{ secrets.N8N_WEBHOOK_URL }}"

    - name: Show Cloud Run URL
      run: |
        echo "Service deployed to:"
        gcloud run services describe $SERVICE_NAME --region $REGION --format 'value(status.url)'