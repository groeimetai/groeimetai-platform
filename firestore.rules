rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users can read/write their own user document
    match /users/{userId} {
      allow read: if isOwner(userId);
      allow write: if isOwner(userId);
    }
    
    // Courses - anyone authenticated can read
    match /courses/{courseId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only admins via Admin SDK
    }
    
    // Enrollments - users can only access their own
    match /enrollments/{enrollmentId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         enrollmentId == request.auth.uid + '_' + resource.data.courseId);
      allow create: if false; // Only via Admin SDK after payment
      allow update: if isAuthenticated() && 
        resource.data.userId == request.auth.uid &&
        request.resource.data.diff(resource.data).affectedKeys()
          .hasOnly(['completedLessons', 'progress', 'completedAt', 'currentLessonId', 'lastAccessedAt']);
      allow delete: if false;
    }
    
    // Payments - users can only read their own
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if false; // Only server-side writes
    }
    
    // Video Progress - users can read/write their own progress
    match /videoProgress/{progressId} {
      allow read, write: if isAuthenticated() && 
        (progressId.matches(request.auth.uid + '_.*') ||
         resource.data.userId == request.auth.uid);
    }
    
    // Course Progress - users can read/write their own progress
    match /courseProgress/{progressId} {
      allow read, write: if isAuthenticated() && 
        (progressId.matches(request.auth.uid + '_.*') ||
         resource.data.userId == request.auth.uid);
    }
    
    // Objectives/Doelstellingen - users manage their own
    match /objectives/{objectiveId} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Objective Progress
    match /objective_progress/{progressId} {
      allow read, write: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }
    
    // Assessment Attempts
    match /assessmentAttempts/{attemptId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Certificates - public read for verification, user write
    match /certificates/{certificateId} {
      allow read: if true; // Public for verification
      allow create: if isAuthenticated() && 
        request.resource.data.userId == request.auth.uid;
      allow update: if false; // Only via Admin SDK
      allow delete: if false; // Only via Admin SDK
    }
    
    // Referral programs - allow read/write for authenticated users
    match /referralPrograms/{programId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && resource.data.createdBy == request.auth.uid;
    }
    
    // Referral stats - users can manage their own
    match /referralStats/{userId} {
      allow read: if isAuthenticated() && userId == request.auth.uid;
      allow create: if isAuthenticated() && userId == request.auth.uid;
      allow update: if isAuthenticated() && userId == request.auth.uid;
    }
    
    // Instructors - allow read for authenticated users
    match /instructors/{instructorId} {
      allow read: if isAuthenticated();
      allow write: if false; // Only via Admin SDK
    }
    
    // Certificate logs for audit trail
    match /certificate_logs/{logId} {
      allow read: if false; // Admin only
      allow write: if isAuthenticated(); // Allow logging certificate events
    }
    
    // Admin collections - no access except via Admin SDK
    match /admin/{document=**} {
      allow read, write: if false;
    }
  }
}