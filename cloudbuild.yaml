steps:
  # Build the Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}', '.']
    id: 'build-image'

  # Push the Docker image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}']
    id: 'push-image'

  # Tag as latest
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'tag',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}',
      '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:latest'
    ]
    id: 'tag-latest'

  # Push latest tag
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:latest']
    id: 'push-latest'

  # Deploy to Cloud Run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - '${_SERVICE_NAME}'
      - '--image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPOSITORY}/${_SERVICE_NAME}:${SHORT_SHA}'
      - '--region=${_REGION}'
      - '--platform=managed'
      - '--allow-unauthenticated'
      - '--port=8080'
      - '--min-instances=1'
      - '--max-instances=10'
      - '--memory=2Gi'
      - '--cpu=2'
      - '--timeout=300'
      - '--concurrency=100'
      - '--set-env-vars=NODE_ENV=production,NEXT_PUBLIC_APP_URL=https://${_SERVICE_NAME}-${_PROJECT_NUMBER}-ew.a.run.app,NEXT_PUBLIC_BLOCKCHAIN_ENABLED=true,NEXT_PUBLIC_DEFAULT_NETWORK=polygon'
      - '--set-secrets=FIREBASE_PROJECT_ID=firebase-project-id:latest,FIREBASE_CLIENT_EMAIL=firebase-client-email:latest,FIREBASE_PRIVATE_KEY=firebase-private-key:latest,MOLLIE_API_KEY=mollie-api-key:latest,PRIVATE_KEY=blockchain-private-key:latest,BLOCKCHAIN_WEBHOOK_SECRET=blockchain-webhook-secret:latest,PINATA_API_KEY=pinata-api-key:latest,PINATA_SECRET_API_KEY=pinata-secret-api-key:latest'
    id: 'deploy'

substitutions:
  _SERVICE_NAME: groeimetai-platform
  _REGION: europe-west1
  _REPOSITORY: docker-repo
  _PROJECT_NUMBER: ${PROJECT_NUMBER}

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'
  
timeout: '1200s'